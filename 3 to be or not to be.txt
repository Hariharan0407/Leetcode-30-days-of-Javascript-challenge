Problem:
Write a function expect that helps developers test their code. It should take in any value val and return an object with the following two functions.

toBe(val) accepts another value and returns true if the two values === each other. If they are not equal, it should throw an error "Not Equal".
notToBe(val) accepts another value and returns true if the two values !== each other. If they are equal, it should throw an error "Equal".
 

Example 1:

Input: func = () => expect(5).toBe(5)
Output: {"value": true}
Explanation: 5 === 5 so this expression returns true.
Example 2:

Input: func = () => expect(5).toBe(null)
Output: {"error": "Not Equal"}
Explanation: 5 !== null so this expression throw the error "Not Equal".
Example 3:

Input: func = () => expect(5).notToBe(null)
Output: {"value": true}
Explanation: 5 !== null so this expression returns true.

solution 1:
var expect = function(val) {
    return {
        toBe(val2){
            if (val===val2){
                return true
            }
            else throw "Not Equal"
        },
        notToBe(val2){
            if (val===val2){
                throw "Equal"
            }
            else return true;
        }
    }
    
};

solution2:
here i have removed the curly braces for the ifelse statements. else statement is not required as if the condition is true the retrn key word will
come out of function and desnt execute the next line. If not then the 'throe error' line will be executed.

var expect = function(val) {
    return {
        toBe(val2){
            if (val===val2)return true
            throw "Not Equal"
        },
        notToBe(val2){
            if (val!==val2)return true
            throw "Equal"
        }
    };
};